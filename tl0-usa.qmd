#
ctry <- "USA"
ctry2 <- "United States"
#
#
#
#
#
library(oecdcountryprofiles)
library(dplyr)
library(tidyr)
library(ggplot2)
library(patchwork)
library(oecdplot)
library(knitr)
library(readxl)
library(janitor)
library(stringr)
library(readr)
library(tintin)
library(glue)
library(scales)
library(plotly)

load_oecd_fonts()

missing_reg <- c("ITG2F")
excl_countries <- c("LUX", "IRL")

clrs <- tintin_colours$the_black_island
clrs2 <- tintin_colours$the_blue_lotus
clrs3 <- tintin_colours$the_red_sea_sharks
clrs4 <- tintin_colours$the_calculus_affair
clrs5 <- tintin_colours$red_rackhams_treasure
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
read_html_table(ctry)
#
#
#
#
#
iso3_g20 <- read_csv("data/ISO_3_G20.csv") %>%
    clean_names() %>%
    rename(iso3 = iso_3)

top_bottom_c <- read_excel("data/top_bottom_gdppc_w_agg.xlsx") %>%
    clean_names()

gdp_pop_00_20 <- read_csv("data/gdp_pop_00_20_imputed_agg_l.csv") %>%
    clean_names() %>%
    select(-x1) %>%
    left_join(iso3_g20, by = "iso3") %>%
    filter(!reg_id %in% missing_reg, !iso3 %in% excl_countries) %>%
    mutate(
        metro_large = ifelse(metro_large != "Metropolitan large", "Non-large", metro_large),
        metro_far = ifelse(metro_far != "Far from a FUA>250K", "Close", metro_far)
    ) %>%
    bind_rows(
        read_csv("data/gdp_pop_tl2_00_20_imputed_l_CHL_PACHA.csv") %>%
            clean_names() %>%
            select(time, reg_id, iso3, gdp, pop, gdp_pc, regional_name_eng = reg_name)
    )

summary_theil_tl2 <- read_csv("data/theil_gdppc_country_00_20_wCHE-CHL.csv") %>%
    clean_names() %>%
    filter(level == "gdppc_tl2") %>%
    select(-c(x1, level))

# summary_theil_tl2 %>%
#   filter(iso3 == ctry)

summary_stats <- gdp_pop_00_20 %>%
    group_by(iso3, time) %>%
    summarise(mean_gdp_pc = mean(gdp_pc, na.rm = TRUE)) %>%
    ungroup() %>%
    left_join(top_bottom_c, by = c("iso3", "time")) %>%
    mutate(
        top_bottom = top_20_gdppc / bottom_20_gdppc,
        top_mean = top_20_gdppc / mean_gdp_pc,
        bottom_mean = bottom_20_gdppc / mean_gdp_pc
    )

# no gdp data for CHL
# summary_stats %>%
#   filter(iso3 == ctry)

summary_stats <- summary_stats %>%
    full_join(summary_theil_tl2, by = c("iso3", "time"))

# summary_stats %>%
#   filter(iso3 == ctry) %>%
#   select(time, theil)

min_y <- summary_theil_tl2 %>%
    filter(iso3 == ctry) %>%
    pull(time) %>%
    min()

index_200x <- summary_stats %>%
    filter(time == min_y) %>%
    pivot_wider(
        id_cols = "iso3",
        names_from = "time",
        values_from = -c(time, iso3)
    )

# index_200x %>%
#   filter(iso3 == ctry) %>%
#   select(theil_2008)
# => rename cols

colnames(index_200x) <- gsub("_200[0-9]", "_200x", colnames(index_200x))

summary_stats_index <- summary_stats %>%
    full_join(index_200x, by = "iso3") %>%
    mutate(
        index_gdppc = mean_gdp_pc / mean_gdp_pc_200x,
        index_bottom = bottom_mean / bottom_mean_200x,
        index_top = top_mean / top_mean_200x,
        index_theil = theil / theil_200x,
        index_top_mean = top_mean / top_mean_200x,
        index_bottom_mean = bottom_mean / bottom_mean_200x,
        index_top_bottom = top_bottom / top_bottom_200x
    ) %>%
    select(
        iso3,
        time,
        index_gdppc,
        index_bottom,
        index_top_mean,
        index_top_bottom,
        index_bottom_mean,
        index_top,
        index_theil
    )

summary_wide <- summary_stats_index %>%
    pivot_longer(cols = -c(time, iso3), names_to = "index") %>%
    mutate(
        labels_index = case_when(
            index == "index_bottom" ~ "Bottom 20%",
            index == "index_top" ~ "Top 20%",
            index == "index_bottom_mean" ~ "Bottom 20%/Mean",
            index == "index_top_mean" ~ "Top 20%/Mean",
            index == "index_theil" ~ "Theil index",
            index == "index_gdppc" ~ "Mean GDP per capita",
            index == "index_top_bottom" ~ "Top 20%/Bottom 20%"
        )
    ) %>%
    left_join(iso3_g20, by = "iso3")

lev_2 <- c(
    "Theil index",
    "Top 20%/Mean",
    "Bottom 20%/Mean",
    "Mean GDP per capita"
)

df_fig1 <- summary_wide %>%
    filter(iso3 == ctry, labels_index %in% lev_2, time >= min_y) %>%
    pivot_wider(
        names_from = index,
        values_from = value
    ) %>%
    mutate(
        index_label = factor(labels_index, levels = lev_2)
    )

fig1 <- df_fig1 %>%
    ggplot(aes(x = time)) +
    geom_line(aes(
        y = index_gdppc,
        colour = index_label
    ), linetype = "dashed", linewidth = 1.2) +
    geom_line(aes(
        y = index_top_mean,
        colour = index_label
    ), linetype = "dashed", linewidth = 1.2) +
    geom_line(aes(
        y = index_bottom_mean,
        colour = index_label
    ), linetype = "dashed", linewidth = 1.2) +
    geom_line(aes(
        y = index_theil,
        colour = index_label
    ), linewidth = 1.2) +
    scale_colour_manual(values = clrs2[c(1, 3, 4, 2)]) + # evil hack to match TL2 colours
    scale_x_continuous(expand = c(0, 0), breaks = seq(from = min(df_fig1$time), to = max(df_fig1$time), by = 5)) +
    labs(
        title = "Figure 1: Trends in GDP per capita inequality indicators,\nTL2 OECD regions",
        x = "",
        y = "Statistic (2000=1)",
        linetype = "",
        colour = ""
    ) +
    theme_minimal()
#
#
#
# range(summary_wide$time) # = 2000-2021!!!
theil_chg <- summary_wide %>%
    # filter in 2 steps to avoid an out of range year
    filter(
        index == "index_theil",
        iso3 == ctry
    ) %>%
    filter(
        time %in% range(time)
    ) %>%
    arrange(time) %>%
    mutate(diff = value - lag(value)) %>%
    filter(time == max(time)) %>%
    pull(diff)

theil_chg_txt <- ifelse(theil_chg > 0, "an increase", "a decline")

theil_max <- summary_wide %>%
    filter(
        index == "index_theil",
        iso3 == ctry
    ) %>%
    filter(value == max(value)) %>%
    pull(time) %>%
    as.integer()

polarization_pct <- summary_wide %>%
    filter(
        index == "index_top_mean",
        iso3 == ctry
    ) %>%
    filter(time %in% range(time)) %>%
    arrange(time) %>%
    mutate(diff = lead(value) - value) %>%
    filter(time == min(time)) %>%
    pull(diff) %>%
    round(3)

polarization_txt <- ifelse(polarization_pct > 0, "higher", "lower")

polarization_yrs <- summary_wide %>%
    filter(
        index == "index_top_mean",
        iso3 == ctry
    ) %>%
    filter(time %in% range(time)) %>%
    pull(time) %>%
    as.integer()

polarization_2_pct <- summary_wide %>%
    filter(
        index == "index_bottom_mean",
        iso3 == ctry
    ) %>%
    filter(
        time %in% range(time)
    ) %>%
    arrange(time) %>%
    mutate(diff = lead(value) - value) %>%
    filter(time == min(time)) %>%
    pull(diff) %>%
    round(3)

polarization_2_txt <- ifelse(polarization_2_pct > 0, "higher", "lower")

polarization_yrs_txt <- summary_wide %>%
    filter(
        index == "index_bottom_mean",
        iso3 == ctry
    ) %>%
    filter(
        time %in% range(time)
    ) %>%
    arrange(time) %>%
    pull(time) %>%
    as.character()

# needs the: USA, UK, Czech Rep, Slovak Rep, Netherlands

ctry3 <- if (any(ctry %in% c("USA", "GBR", "CZE", "SVK", "NLD"))) {
    paste("The", ctry2)
} else {
    ctry2
}

ctry4 <- if (any(ctry %in% c("USA", "GBR", "CZE", "SVK", "NLD"))) {
    paste("the", ctry2)
} else {
    ctry2
}

# not all countries have polarization data
theil_paragraph <- glue("{ ctry3 } experienced { theil_chg_txt } in the Theil index of GDP per capita over 2000-2020. Inequality reached its maximum in { theil_max }. The figures were normalized, with the values in the year {as.integer(min_y)} set to 1.")

theil_paragraph_2 <- if (is.na(polarization_2_pct)) {
    ""
} else {
    glue("Polarisation, as measured by the Top 20%/Mean ratio was {paste(abs(polarization_pct), polarization_txt)} in {min(polarization_yrs)} compared to {max(polarization_yrs)}. Bottom divergence, as measured by the Bottom 20%/Mean ratio was {paste(abs(polarization_2_pct), polarization_2_txt)} in the same period.")
}
#
#
#
#
#
#
#
ggplotly(fig1) %>%
    config(displayModeBar = F)
#
#
#
#
#
#
#
#
#
#
# Load file with top/bottom 20% data (provided by Eric using weights)
top_bottom_c_oecd <- read_excel("data/top_bottom_gdppc_w_agg.xlsx") %>%
    clean_names()

# Load GDP_PC data for 2000-2020 aggregated by metros sharing the same FUA (missings imputed by Eric)
gdp_pop_00_20 <- read_csv("data/gdp_pop_00_20_imputed_agg_l.csv") %>%
    clean_names() %>%
    select(-x1) %>%
    filter(!reg_id %in% missing_reg, !iso3 %in% excl_countries) %>%
    mutate(
        metro_large = ifelse(metro_large != "Metropolitan large", "Non-large", metro_large),
        metro_far = ifelse(metro_far != "Far from a FUA>250K", "Close", metro_far)
    ) %>%
    drop_na(iso3)

# Process data ------------------------------------------------------------

gdppc_metro <- gdp_pop_00_20 %>%
    group_by(metro_lev1, time, iso3) %>%
    summarise(mean_gdppc = mean(gdp_pc), .groups = "drop") %>%
    ungroup() %>%
    filter(time %in% c(2000, 2020)) %>%
    pivot_wider(id_cols = c(time, iso3), names_from = metro_lev1, values_from = mean_gdppc) %>%
    mutate(
        gap = Metropolitan / `Non-metropolitan`,
        type = "Metropolitan/Non-metropolitan"
    ) %>%
    select(time, iso3, gap, type)

gdppc_large <- gdp_pop_00_20 %>%
    group_by(metro_large, time, iso3) %>%
    summarise(mean_gdppc = mean(gdp_pc, na.rm = T), .groups = "drop") %>%
    ungroup() %>%
    filter(time %in% c(2000, 2020)) %>%
    pivot_wider(id_cols = c(time, iso3), names_from = metro_large, values_from = mean_gdppc) %>%
    clean_names() %>%
    mutate(
        gap = metropolitan_large / non_large,
        type = "Large/Non-large"
    ) %>%
    select(time, iso3, gap, type) %>%
    drop_na(gap)

gdppc_far <- gdp_pop_00_20 %>%
    group_by(metro_far, time, iso3) %>%
    summarise(mean_gdppc = mean(gdp_pc, na.rm = T), .groups = "drop") %>%
    ungroup() %>%
    filter(time %in% c(2000, 2020)) %>%
    pivot_wider(id_cols = c(time, iso3), names_from = metro_far, values_from = mean_gdppc) %>%
    clean_names() %>%
    mutate(
        gap = close / far_from_a_fua_250k,
        type = "Near/Far from a FUA >250K"
    ) %>%
    select(time, iso3, gap, type) %>%
    drop_na(gap)

gaps <- bind_rows(gdppc_metro, gdppc_far, gdppc_large)

mean_gaps <- gaps %>%
    filter(time == 2020) %>%
    group_by(time, type) %>%
    summarise(gap = mean(gap, na.rm = TRUE)) %>%
    ungroup() %>%
    mutate(time = "OECD mean gap, 2020") %>%
    select(time, type, gap)

country <- gaps %>%
    filter(iso3 == ctry) %>%
    select(-iso3)

country <- bind_rows(
    country %>%
        mutate(time = as.character(time)),
    mean_gaps
) %>%
    mutate(time = factor(time))

lev_type <- c("Large/Non-large", "Metropolitan/Non-metropolitan", "Near/Far from a FUA >250K")

fig2 <- country %>%
    mutate(
        type = factor(type, levels = lev_type)
    ) %>%
    rename(
        series = type
    ) %>%
    ggplot() +
    geom_col(
        # aes(x = time, y = gap, fill = type),
        aes(x = series, y = gap, fill = time),
        linewidth = 1.5,
        position = position_dodge2(preserve = "single")
    ) +
    labs(
        x = "", y = "Gap",
        title = "Figure 2: GDP per capita gap by type of region\ncompared to the OECD average"
    ) +
    # theme_oecd(base_size = 10) +
    theme_minimal() +
    theme(
        axis.text.x = element_text(angle = 30, hjust = 1)
    ) +
    scale_fill_manual(values = clrs, name = "")
#
#
#
gdp_gap <- country %>%
    filter(
        time == 2020,
        type == "Large/Non-large"
    ) %>%
    pull(gap) %>%
    round(3)

gdp_2_gap <- country %>%
    filter(
        time == "OECD mean gap, 2020",
        type == "Large/Non-large"
    ) %>%
    pull(gap) %>%
    round(3)

gdp_gap_lag <- country %>%
    filter(
        time == 2000,
        type == "Large/Non-large"
    ) %>%
    pull(gap) %>%
    round(3)

gdp_gap_txt <- ifelse(gdp_gap - gdp_gap_lag > 0, "increased", "decreased")

gdp_gap_pct <- abs(round(gdp_gap - gdp_gap_lag, 3))

gdp_3_gap <- country %>%
    filter(
        time == 2020,
        type == "Metropolitan/Non-metropolitan"
    ) %>%
    pull(gap) %>%
    round(3)

gdp_3_gap_lag <- country %>%
    filter(
        time == 2000,
        type == "Metropolitan/Non-metropolitan"
    ) %>%
    pull(gap) %>%
    round(3)

gdp_4_gap <- country %>%
    filter(
        time == "OECD mean gap, 2020",
        type == "Metropolitan/Non-metropolitan"
    ) %>%
    pull(gap) %>%
    round(3)

gdp_2_gap_txt <- ifelse(gdp_3_gap - gdp_3_gap_lag > 0, "increased", "decreased")

gdp_2_gap_pct <- abs(round(gdp_3_gap - gdp_3_gap_lag, 3))

gdp_5_gap <- country %>%
    filter(
        time == 2020,
        type == "Near/Far from a FUA >250K"
    ) %>%
    pull(gap) %>%
    round(3)

gdp_5_gap_lag <- country %>%
    filter(
        time == 2000,
        type == "Near/Far from a FUA >250K"
    ) %>%
    pull(gap) %>%
    round(3)

gdp_3_gap_txt <- ifelse(gdp_5_gap - gdp_5_gap_lag > 0, "increase", "decrease")

gdp_3_gap_pct <- abs(round(gdp_5_gap - gdp_5_gap_lag, 3))
#
#
#
#
#
#
#
#
#
# no interactivity
# fig2

# interactivity
ggplotly(fig2) %>%
    config(displayModeBar = F)
#
#
#
#
#
#
#
#
#
#
#
# read ----
dp1 <- read_excel("data/countryprofile_fig3_alt.xlsx", sheet = ctry) %>%
    select(time, pw_lp, pw_hp) %>%
    clean_names()

# tidy ----

# colnames(dp1) <- str_replace(colnames(dp1), tolower(ctry), "country")

colnames(dp1) <- c("time", "pw_lp_country", "pw_hp_country")

dp11 <- dp1 %>%
    select(time, matches("country")) %>%
    pivot_longer(-time) %>%
    rename(value_country = value)

dp11 <- dp11 %>%
    mutate(
        name = case_when(
            name == "pw_lp_country" ~ "Lower half",
            name == "pw_hp_country" ~ "Upper half"
        )
    )

# plot ----

yrs <- sort(unique(dp11$time))
yrs <- seq(min(yrs), max(yrs), 2)

hpgrew <- dp11 %>%
    filter(
        name == "Upper half",
        time %in% c(min(yrs), max(yrs))
    ) %>%
    summarise(grew = 100 * (value_country - lag(value_country)) / lag(value_country)) %>%
    drop_na() %>%
    pull() %>%
    round(1)

lpgrew <- dp11 %>%
    filter(
        name == "Lower half",
        time %in% c(min(yrs), max(yrs))
    ) %>%
    summarise(grew = 100 * (value_country - lag(value_country)) / lag(value_country)) %>%
    drop_na() %>%
    pull() %>%
    round(1)

hpdiff <- hpgrew - lpgrew

hpmore <- ifelse(hpdiff > 0, "more", "less")

fig3 <- dp11 %>%
    rename(
        value = value_country,
        series = name
    ) %>%
    ggplot() +
    geom_line(aes(x = time, y = value, color = series), linewidth = 1.2) +
    # theme_oecd(base_size = 10) +
    theme_minimal() +
    scale_colour_manual(values = c("#177dc7", "#508551")) +
    labs(
        x = "", y = "Labour productivity (2015 USD PPP)", colour = "",
        title = "Figure 3: Evolution of labour productivity,\nTL2 regions"
    ) +
    scale_x_continuous(labels = as.character(yrs), breaks = yrs) +
    scale_y_continuous(labels = scales::number_format())

# needs the: USA, UK, Czech Rep, Slovak Rep, Netherlands

ctry3 <- if (any(ctry %in% c("USA", "GBR", "CZE", "SVK", "NLD"))) {
    paste("The", ctry2)
} else {
    ctry2
}
#
#
#
fig3_text <- read_excel("data/fig3_text_FINAL.xlsx", sheet = "text") %>%
    clean_names()

fig3_text <- fig3_text %>%
    filter(iso3 == ctry) %>%
    pull(text_final)
#
#
#
#
#
# no interactivity
# fig3

# interactivity
ggplotly(fig3) %>%
    config(displayModeBar = F)
#
#
#
#
#
#
#
#
#
#
#
# read ----

finp <- if (any(ctry %in% c("AUS", "CAN", "COL", "CHE", "CHL", "IRL", "MEX"))) {
    "data/countryprofile_option2_addon.xlsx"
} else {
    "data/countryprofile_option2.xlsx"
}

dp2 <- read_excel(finp, sheet = ctry) %>%
    clean_names()

# tidy ----

colnames(dp2) <- str_replace(colnames(dp2), tolower(ctry), "country")

dp21 <- dp2 %>%
    select(time, matches("country")) %>%
    pivot_longer(-time) %>%
    rename(value_country = value)

dp21 <- dp21 %>%
    mutate(
        name = case_when(
            name == "share_tgoods_lp_country" ~ paste(ctry, "TG LP"),
            name == "share_tgoods_hp_country" ~ paste(ctry, "TG HP"),
            name == "share_tserv_lp_country" ~ paste(ctry, "TS LP"),
            name == "share_tserv_hp_country" ~ paste(ctry, "TS HP")
        )
    )

# plot ----

yrs <- sort(unique(dp21$time))
yrs <- seq(min(yrs), max(yrs), 1)

tghpgrew <- dp21 %>%
    filter(
        name == paste(ctry, "TG HP"),
        time %in% c(min(yrs), max(yrs))
    ) %>%
    summarise(grew = value_country - lag(value_country)) %>%
    drop_na() %>%
    pull() %>%
    round(1)

tglpgrew <- dp21 %>%
    filter(
        name == paste(ctry, "TG LP"),
        time %in% c(min(yrs), max(yrs))
    ) %>%
    summarise(grew = value_country - lag(value_country)) %>%
    drop_na() %>%
    pull() %>%
    round(1)

tghpdiff <- tghpgrew - tglpgrew
tghpmore <- ifelse(tghpdiff > 0, "grew", "declined")

tglpdiff <- tglpgrew - tglpgrew
tglpmore <- ifelse(tglpdiff > 0, "grew", "declined")

tshpgrew <- dp21 %>%
    filter(
        name == paste(ctry, "TS HP"),
        time %in% c(min(yrs), max(yrs))
    ) %>%
    summarise(grew = value_country - lag(value_country)) %>%
    drop_na() %>%
    pull() %>%
    round(1)

tslpgrew <- dp21 %>%
    filter(
        name == paste(ctry, "TS LP"),
        time %in% c(min(yrs), max(yrs))
    ) %>%
    summarise(grew = value_country - lag(value_country)) %>%
    drop_na() %>%
    pull() %>%
    round(1)

tshpdiff <- tshpgrew - tslpgrew
tshpmore <- ifelse(tshpdiff > 0, "grew", "declined")

tslpdiff <- tslpgrew - tslpgrew
tslpmore <- ifelse(tslpdiff > 0, "grew", "declined")

dp21 <- dp21 %>%
    mutate(category = gsub(paste0("^OECD |^", ctry, " "), "", name))

dp21 <- dp21 %>%
    mutate(
        country = str_replace_all(name, " .*", ""),
        category1 = str_sub(category, 1, 2),
        category1 = str_replace_all(category1, "TG", "Tradable goods"),
        category1 = str_replace_all(category1, "TS", "Tradable services"),
        category2 = paste(str_sub(category, 4, 5), time),
        category2 = str_replace_all(category2, "LP", "Lower half"),
        category2 = str_replace_all(category2, "HP", "Upper half")
    )

dp21_2 <- dp21 %>%
    select(country, time, category1, category2, value_country) %>%
    mutate(
        category2_2 = category2,
        category2 = str_replace_all(category2, as.character(min(yrs)), "minyr"),
        category2 = str_replace_all(category2, as.character(max(yrs)), "maxyr")
    ) %>%
    # remove all after productivy in category2
    # mutate(category2 = str_replace_all(category2, "productivity.*", "productivity")) %>%
    pivot_wider(names_from = category2, values_from = value_country) %>%
    clean_names()

# for plot_ly -----
dp21_2 <- dp21 %>%
    select(country, time, category1, category2, value_country) %>%
    mutate(type = ifelse(str_detect(category2, "Lower"), "Lower half", "Upper half"))

dp21_min_TG <- dp21 %>%
    select(country, time, category1, category2, value_country) %>%
    mutate(type = ifelse(str_detect(category2, "Lower"), "Lower half", "Upper half")) %>%
    filter(time == min(dp21_2$time) & category1 == "Tradable goods")

dp21_min_TS <- dp21 %>%
    select(country, time, category1, category2, value_country) %>%
    mutate(type = ifelse(str_detect(category2, "Lower"), "Lower half", "Upper half")) %>%
    filter(time == min(dp21_2$time) & category1 == "Tradable services")

dp21_max_TG <- dp21 %>%
    select(country, time, category1, category2, value_country) %>%
    mutate(type = ifelse(str_detect(category2, "Lower"), "Lower half", "Upper half")) %>%
    filter(time == max(dp21_2$time) & category1 == "Tradable goods")

dp21_max_TS <- dp21 %>%
    select(country, time, category1, category2, value_country) %>%
    mutate(type = ifelse(str_detect(category2, "Lower"), "Lower half", "Upper half")) %>%
    filter(time == max(dp21_2$time) & category1 == "Tradable services")

data_plotly <- tibble(
    "x" = c("Lower half", "Upper half"),
    "y" = dp21_min_TG$value_country,
    "y2" = dp21_min_TS$value_country,
    "y3" = dp21_max_TG$value_country,
    "y4" = dp21_max_TS$value_country,
    "name1" = dp21_min_TG$category2,
    "name2" = dp21_max_TG$category2
)

x <- c("Lower half", "Upper half")

y <- dp21_min_TG$value_country
y2 <- dp21_min_TS$value_country

y3 <- dp21_max_TG$value_country
y4 <- dp21_max_TS$value_country

name1 <- dp21_min_TG$category2
name2 <- dp21_max_TG$category2

p1 <- plot_ly() %>% add_trace(
    x = ~x, y = ~y3, color = ~x,
    type = "bar",
    name = ~name2,
    marker = list(
        color = c("#c8f075", "#6bc5f2")
    )
)

p1 <- p1 %>% add_markers(
    x = ~x, y = ~y, color = ~x,
    name = ~name1,
    mode = "markers",
    marker = list(
        color = clrs4[2:1],
        size = 12,
        symbol = "diamond-dot"
    )
)

p1 <- p1 %>% layout(
    title = "Tradable goods",
    xaxis = list(title = "", visible = FALSE),
    yaxis = list(title = "Employment share (%)")
)

p2 <- plot_ly() %>% add_trace(
    x = ~x, y = ~y4, color = ~x,
    type = "bar",
    marker = list(color = c("#c8f075", "#6bc5f2")),
    showlegend = FALSE
)

p2 <- p2 %>% add_markers(
    x = ~x, y = ~y2, color = ~x,
    mode = "markers",
    marker = list(
        color = clrs4[2:1],
        size = 12,
        symbol = "diamond-dot"
    ),
    showlegend = FALSE
)

p2 <- p2 %>% layout(
    title = "Tradable services",
    xaxis = list(title = "", visible = FALSE),
    yaxis = list(title = "Employment share (%)")
)

fig4 <- subplot(p1, p2, nrows = 1, margin = 0.05, shareX = TRUE, shareY = TRUE)

fig4 <- fig4 %>%
    layout(
        title = list(text = "Figure 4: Share of workers in most productive (tradable) sectors,\nTL2 regions", x = 0),
        margin = list(
            l = 50, r = 50,
            b = 50, t = 120,
            pad = 4
        ),
        annotations = list(
            list(
                x = 0.25,
                y = 1,
                font = list(size = 14),
                text = "Industry",
                xref = "paper",
                yref = "paper",
                xanchor = "center",
                yanchor = "bottom",
                showarrow = FALSE
            ),
            list(
                x = 0.75,
                y = 1,
                font = list(size = 14),
                text = "Tradable services",
                xref = "paper",
                yref = "paper",
                xanchor = "center",
                yanchor = "bottom",
                showarrow = FALSE
            )
        )
    )
#
#
#
dp2 <- read_excel("data/countryprofile_fig4_alt.xlsx", sheet = ctry) %>%
    clean_names()

text_all <- dp2 %>%
    filter(time == 2020) %>%
    pull(text_all)
#
#
#
#
#
# put fig4 title in black
fig4 <- fig4 %>%
    layout(
        title = list(text = "Figure 4: Share of workers in most productive (tradable) sectors,\nTL2 regions", x = 0, font = list(color = "black"))
    )

# remove legend background
fig4 <- fig4 %>%
    layout(
        legend = list(bgcolor = "rgba(0,0,0,0)")
    )

fig4
#
#
#
#
#
#
#
#
#
#
#
#
#
read_html_text(ctry)
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
